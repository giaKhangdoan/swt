// in this file you can append custom step methods to 'I' object

// ƒê·ªãnh nghƒ©a c√°c ph∆∞∆°ng th·ª©c t√πy ch·ªânh cho AI testing

module.exports = function() {
  return actor({
    // ƒêƒÉng nh·∫≠p v√†o h·ªá th·ªëng
    loginAsUser: function(email, password) {
      this.amOnPage('/login');
      this.fillField('Email', email);
      this.fillField('Password', password);
      this.click('ƒêƒÉng nh·∫≠p');
      this.waitForText('Trang c√° nh√¢n', 10);
    },

    // ----- C√°c ph∆∞∆°ng th·ª©c AI testing -----

    // Ph√¢n t√≠ch UI v·ªõi Gemini
    analyzeUIWithGemini: async function(description = '') {
      this.say('ü§ñ ƒêang ph√¢n t√≠ch UI v·ªõi Gemini AI...');
      return await this._executeGeminiHelper('validateUI', [description]);
    },

    // Ph√¢n t√≠ch m·ªôt ph·∫ßn t·ª≠ c·ª• th·ªÉ v·ªõi Gemini
    analyzeElementWithGemini: async function(locator, prompt) {
      this.say(`ü§ñ ƒêang ph√¢n t√≠ch ph·∫ßn t·ª≠ "${locator}" v·ªõi Gemini AI...`);
      return await this._executeGeminiHelper('analyzeElement', [locator, prompt]);
    },

    // T·∫°o n·ªôi dung v·ªõi Gemini
    generateContentWithGemini: async function(prompt) {
      this.say('ü§ñ ƒêang t·∫°o n·ªôi dung v·ªõi Gemini AI...');
      return await this._executeGeminiHelper('generateContent', [prompt]);
    },

    // So s√°nh hai h√¨nh ·∫£nh UI
    compareUIWithGemini: async function(beforePath, afterPath, description) {
      this.say('ü§ñ ƒêang so s√°nh UI tr∆∞·ªõc v√† sau v·ªõi Gemini AI...');
      return await this._executeGeminiHelper('compareImages', [beforePath, afterPath, description]);
    },

    // Ph∆∞∆°ng th·ª©c helper ƒë·ªÉ g·ªçi GeminiHelper
    _executeGeminiHelper: async function(method, args) {
      try {
        // Ki·ªÉm tra ƒë·∫ßy ƒë·ªß helpers
        if (!this.helpers || typeof this.helpers !== 'object') {
          return 'L·ªói: ƒê·ªëi t∆∞·ª£ng helpers kh√¥ng t·ªìn t·∫°i';
        }

        const helper = this.helpers.GeminiHelper;
        if (!helper) {
          return 'L·ªói: GeminiHelper kh√¥ng ƒë∆∞·ª£c t√¨m th·∫•y. Ki·ªÉm tra c·∫•u h√¨nh trong codecept.conf.js';
        }

        if (typeof helper[method] !== 'function') {
          return `L·ªói: Ph∆∞∆°ng th·ª©c ${method} kh√¥ng t·ªìn t·∫°i trong GeminiHelper`;
        }

        return await helper[method](...args);
      } catch (error) {
        console.error(`L·ªói khi g·ªçi GeminiHelper.${method}:`, error);
        return `L·ªói: ${error.message}`;
      }
    },

    // Ch·ª•p ·∫£nh m√†n h√¨nh hi·ªán t·∫°i v√† l∆∞u
    captureScreenshot: async function(name) {
      // ƒê·ª£i ƒë·ªÉ trang t·∫£i ·ªïn ƒë·ªãnh tr∆∞·ªõc khi ch·ª•p
      await this.wait(2);
      const fileName = `./output/${name || 'screenshot'}_${Date.now()}.jpg`;
      try {
        await this.saveScreenshot(fileName);
        this.say(`üì∏ ƒê√£ ch·ª•p ·∫£nh m√†n h√¨nh: ${fileName}`);
        return fileName;
      } catch (error) {
        this.say(`‚ùå L·ªói khi ch·ª•p ·∫£nh m√†n h√¨nh: ${error.message}`);
        // N·∫øu l·ªói timeout, th·ª≠ l·∫°i v·ªõi timeout ng·∫Øn h∆°n
        if (error.message.includes('timeout')) {
          this.say('‚ö†Ô∏è Th·ª≠ l·∫°i v·ªõi t√πy ch·ªçn kh√°c...');
          try {
            // S·ª≠ d·ª•ng t√πy ch·ªçn kh√°c ƒë·ªÉ ch·ª•p ·∫£nh
            await this.executeScript(function() {
              return document.documentElement.outerHTML;
            });
            await this.wait(1);
            await this.saveScreenshot(fileName);
            this.say(`ÔøΩÔøΩ ƒê√£ ch·ª•p l·∫°i ·∫£nh m√†n h√¨nh th√†nh c√¥ng: ${fileName}`);
            return fileName;
          } catch (retryError) {
            this.say(`‚ùå Kh√¥ng th·ªÉ ch·ª•p ·∫£nh m√†n h√¨nh ngay c·∫£ khi th·ª≠ l·∫°i: ${retryError.message}`);
            return null;
          }
        }
        return null;
      }
    },

    // Ph√¢n t√≠ch accessibility
    analyzeAccessibility: async function() {
      return this.analyzeUIWithGemini(
        'H√£y ph√¢n t√≠ch trang web d·ª±a tr√™n h∆∞·ªõng d·∫´n ti·∫øp c·∫≠n WCAG 2.1. ' +
        'Ki·ªÉm tra ƒë·ªô t∆∞∆°ng ph·∫£n, k√≠ch th∆∞·ªõc vƒÉn b·∫£n, c·∫•u tr√∫c heading, thu·ªôc t√≠nh alt, ' +
        'v√† c√°c v·∫•n ƒë·ªÅ ti·∫øp c·∫≠n kh√°c. ƒê·ªÅ xu·∫•t c·∫£i thi·ªán c·ª• th·ªÉ.'
      );
    },

    // Ph√¢n t√≠ch UX design
    analyzeUXDesign: async function() {
      return this.analyzeUIWithGemini(
        'H√£y ph√¢n t√≠ch tr·∫£i nghi·ªám ng∆∞·ªùi d√πng c·ªßa trang web n√†y. ' +
        'ƒê√°nh gi√° t√≠nh nh·∫•t qu√°n, t√≠nh tr·ª±c quan, hi·ªáu qu·∫£ t∆∞∆°ng t√°c, ' +
        'v√† c√°c nguy√™n t·∫Øc thi·∫øt k·∫ø UX. X√°c ƒë·ªãnh c·∫£ ƒëi·ªÉm m·∫°nh v√† lƒ©nh v·ª±c c·∫ßn c·∫£i thi·ªán.'
      );
    },

    // Ki·ªÉm tra responsive design
    analyzeResponsiveDesign: async function(viewport) {
      if (viewport) {
        this.resizeWindow(viewport.width, viewport.height);
      }
      
      return this.analyzeUIWithGemini(
        `ƒê√°nh gi√° responsive design c·ªßa trang web n√†y ·ªü k√≠ch th∆∞·ªõc viewport ${viewport?.width || 'hi·ªán t·∫°i'} x ${viewport?.height || 'hi·ªán t·∫°i'}. ` +
        'Ki·ªÉm tra xem n·ªôi dung c√≥ hi·ªÉn th·ªã ƒë√∫ng kh√¥ng, c√≥ v·∫•n ƒë·ªÅ overflow kh√¥ng, ' +
        'c√°c ph·∫ßn t·ª≠ c√≥ t∆∞∆°ng th√≠ch v·ªõi k√≠ch th∆∞·ªõc m√†n h√¨nh kh√¥ng.'
      );
    },

    // B√°o c√°o k·∫øt qu·∫£ ki·ªÉm th·ª≠
    reportAIAnalysis: function(testName, result) {
      this.say(`\n----- üìä B√°o c√°o ph√¢n t√≠ch AI cho "${testName}" -----\n`);
      this.say(result);
      this.say('\n----- K·∫øt th√∫c b√°o c√°o ph√¢n t√≠ch -----\n');
    }
  });
} 